#
# Opções básicas de configuração
#

# Diretório onde a configuração será armazenada
CONFIG=~/.jitsi-meet-cfg

# Porta pública HTTP
HTTP_PORT=80

# Porta pública HTTPS
HTTPS_PORT=443

# Fuso horário do sistema
TZ=America/Sao_Paulo


# URL que seus usuários precisarão acessar
### MUDAR AQUI ###
PUBLIC_URL=https://jitsi.cidade.uf.leg.br

# Endereço IP de seu servidor
### MUDAR AQUI ###
DOCKER_HOST_ADDRESS=192.168.1.1

#
# Configuração do Let's Encrypt
#

# Habilita certificados Let's Encrypt
ENABLE_LETSENCRYPT=1

# Domínio que o LetsEncrypt usará para emitir o certificado
### MUDAR AQUI ###
LETSENCRYPT_DOMAIN=jitsi.cidade.uf.leg.br

# E-mail utilizado pelo Let's Encrypt para mandar notificações importantes (obrigatório)
### MUDAR AQUI ###
LETSENCRYPT_EMAIL=seuemail@cidade.uf.leg.br

#
# Integração ao Etherpad (para compartilhar documentos)
#

# Configuração de URL do etherpad-lite (descomentar para habilitar)
#ETHERPAD_URL_BASE=http://etherpad.meet.jitsi:9001


#
# Opções básicas de configuração do Jigasi (para suporte a gateway SIP)
#

# URI SIP para chamadas
#JIGASI_SIP_URI=test@sip2sip.info

# Senha para a conta SIP em texto plano
#JIGASI_SIP_PASSWORD=passw0rd

# Servidor SIP (use o domínio SIP da conta, se estiver em dúvida)
#JIGASI_SIP_SERVER=sip2sip.info

# Porta do servidor SIP
#JIGASI_SIP_PORT=5060

# Transporte do servidor SIP
# #JIGASI_SIP_TRANSPORT=UDP

#
# Configuração de autenticação 
#
#

# Habilitar autenticação
#ENABLE_AUTH=1

# Permitir usuários convidados
#ENABLE_GUESTS=1

# Tipo de autenticação: internal, jwt ou ldap
#AUTH_TYPE=internal

# Autenticação JWT
#

# Identificador da aplicação
#JWT_APP_ID=my_jitsi_app_id

# Segredo da Aplicação conhecido apenas pelo seu token
#JWT_APP_SECRET=my_jitsi_app_secret

# (Opcional) Configure asap_accepted_issuers como lista separada por vírgulas
#JWT_ACCEPTED_ISSUERS=my_web_client,my_app_client

# (Octional) Configure asap_accepted_audiences como lista separada por vírgulas
#JWT_ACCEPTED_AUDIENCES=my_server1,my_server2


# Autenticação LDAP (para maiores informações, veja a página man do Cyrus SASL saslauthd.conf)
#

# Url LDAP para conexão
#LDAP_URL=ldaps://ldap.domain.com/

# DN base do LDAP. Pode ser vazio
#LDAP_BASE=DC=example,DC=domain,DC=com

# DN do usuário LDAP. Não especifique este parâmetro para conexão anônima ao LDAP
#LDAP_BINDDN=CN=binduser,OU=users,DC=example,DC=domain,DC=com

# Senha do usuário LDAP. Não especifique este paraêmtro para conexão anônima ao LDAP
#LDAP_BINDPW=LdapUserPassw0rd

# Filtro LDAP. Exemplos com chaves:
# %1-9 - se a chave de entrada é user@mail.domain.com, então %1 é com, %2 é domain e %3 é mail
# %s - %s é substituído pela string completa de serviço
# %r - %r é substituído pela string completa do realm
#LDAP_FILTER=(sAMAccountName=%u)

# Método de autenticação LDAP
#LDAP_AUTH_METHOD=bind

# Versão LDAP
#LDAP_VERSION=3

# LDAP usa TLS?
#LDAP_USE_TLS=1

# Lista de cifras SSL/TLS permitidas no LDAP
#LDAP_TLS_CIPHERS=SECURE256:SECURE128:!AES-128-CBC:!ARCFOUR-128:!CAMELLIA-128-CBC:!3DES-CBC:!CAMELLIA-128-CBC

# Exigir e verificar certificado do servidor
#LDAP_TLS_CHECK_PEER=1

# Caminho para o arquivo de certificados de CAs. Usado quando verificação de certificado de servidor está habilitada
#LDAP_TLS_CACERT_FILE=/etc/ssl/certs/ca-certificates.crt

# Caminho para o diretório de certificados de CAs. Usado quando verificação de certificado de servidor é habilitada
#LDAP_TLS_CACERT_DIR=/etc/ssl/certs

# Quando usar starttls, implica em LDAPv3 e requer ldap:// em vez de ldaps://
# LDAP_START_TLS=1


#
# Advanced configuration options (you generally don't need to change these)
#

# Internal XMPP domain
XMPP_DOMAIN=meet.jitsi

# Internal XMPP server
XMPP_SERVER=xmpp.meet.jitsi

# Internal XMPP server URL
XMPP_BOSH_URL_BASE=http://xmpp.meet.jitsi:5280

# Internal XMPP domain for authenticated services
XMPP_AUTH_DOMAIN=auth.meet.jitsi

# XMPP domain for the MUC
XMPP_MUC_DOMAIN=muc.meet.jitsi

# XMPP domain for the internal MUC used for jibri, jigasi and jvb pools
XMPP_INTERNAL_MUC_DOMAIN=internal-muc.meet.jitsi

# XMPP domain for unauthenticated users
XMPP_GUEST_DOMAIN=guest.meet.jitsi

# Custom Prosody modules for XMPP_DOMAIN (comma separated)
XMPP_MODULES=

# Custom Prosody modules for MUC component (comma separated)
XMPP_MUC_MODULES=

# Custom Prosody modules for internal MUC component (comma separated)
XMPP_INTERNAL_MUC_MODULES=

# MUC for the JVB pool
JVB_BREWERY_MUC=jvbbrewery

# XMPP user for JVB client connections
JVB_AUTH_USER=jvb

# XMPP password for JVB client connections
JVB_AUTH_PASSWORD=passw0rd

# STUN servers used to discover the server's public IP
#JVB_STUN_SERVERS=meet-jit-si-turnrelay.jitsi.net:443

# Media port for the Jitsi Videobridge
JVB_PORT=10000

# TCP Fallback for Jitsi Videobridge for when UDP isn't available
JVB_TCP_HARVESTER_DISABLED=false
JVB_TCP_PORT=4443

# A comma separated list of APIs to enable when the JVB is started [default: none]
# See https://github.com/jitsi/jitsi-videobridge/blob/master/doc/rest.md for more information
#JVB_ENABLE_APIS=rest,colibri

# XMPP component password for Jicofo
JICOFO_COMPONENT_SECRET=s3cr37

# XMPP user for Jicofo client connections.
# NOTE: this option doesn't currently work due to a bug
JICOFO_AUTH_USER=focus

# XMPP password for Jicofo client connections
JICOFO_AUTH_PASSWORD=passw0rd

# Base URL of Jicofo's reservation REST API
#JICOFO_RESERVATION_REST_BASE_URL=http://reservation.example.com

# XMPP user for Jigasi MUC client connections
JIGASI_XMPP_USER=jigasi

# XMPP password for Jigasi MUC client connections
JIGASI_XMPP_PASSWORD=passw0rd

# MUC name for the Jigasi pool
JIGASI_BREWERY_MUC=jigasibrewery

# Minimum port for media used by Jigasi
JIGASI_PORT_MIN=20000

# Maximum port for media used by Jigasi
JIGASI_PORT_MAX=20050

# Enable SDES srtp
#JIGASI_ENABLE_SDES_SRTP=1

# Keepalive method
#JIGASI_SIP_KEEP_ALIVE_METHOD=OPTIONS

# Health-check extension
#JIGASI_HEALTH_CHECK_SIP_URI=keepalive

# Health-check interval
#JIGASI_HEALTH_CHECK_INTERVAL=300000
#
# Enable Jigasi transcription
#ENABLE_TRANSCRIPTIONS=1

# Jigasi will record audio when transcriber is on [default: false]
#JIGASI_TRANSCRIBER_RECORD_AUDIO=true

# Jigasi will send transcribed text to the chat when transcriber is on [default: false]
#JIGASI_TRANSCRIBER_SEND_TXT=true

# Jigasi will post an url to the chat with transcription file [default: false]
#JIGASI_TRANSCRIBER_ADVERTISE_URL=true

# Credentials for connect to Cloud Google API from Jigasi
# Please read https://cloud.google.com/text-to-speech/docs/quickstart-protocol
# section "Before you begin" paragraph 1 to 5
# Copy the values from the json to the related env vars
#GC_PROJECT_ID=
#GC_PRIVATE_KEY_ID=
#GC_PRIVATE_KEY=
#GC_CLIENT_EMAIL=
#GC_CLIENT_ID=
#GC_CLIENT_CERT_URL=

# Habilitar gravação
ENABLE_RECORDING=0

# domínio XMPP para o gravador do Jibri
XMPP_RECORDER_DOMAIN=recorder.meet.jitsi

# nome de usuário XMPP do gravador para conexões de cliente do Jibri
JIBRI_RECORDER_USER=recorder

# senha do usuário XMPP do gravador para conexões de cliente do Jibri
JIBRI_RECORDER_PASSWORD=passw0rd

# diretório para gravações dentro do container Jibri
JIBRI_RECORDING_DIR=/config/recordings

# Scrip finalizador. Irá rodar depois que a gravação terminar.
JIBRI_FINALIZE_RECORDING_SCRIPT_PATH=/config/finalize.sh

# usuário XMPP para conexões de cliente do Jibri
JIBRI_XMPP_USER=jibri

# senha XMPP para conexões de cliente do Jibri
JIBRI_XMPP_PASSWORD=passw0rd

# nome MUC para o pool Jibri
JIBRI_BREWERY_MUC=jibribrewery

# tempo máximo de conexão MUC
JIBRI_PENDING_TIMEOUT=90

# When jibri gets a request to start a service for a room, the room
# jid will look like: roomName@optional.prefixes.subdomain.xmpp_domain
# We'll build the url for the call by transforming that into:
# https://xmpp_domain/subdomain/roomName
# So if there are any prefixes in the jid (like jitsi meet, which
# has its participants join a muc at conference.xmpp_domain) then
# list that prefix here so it can be stripped out to generate
# the call url correctly
JIBRI_STRIP_DOMAIN_JID=muc

# Diretório para os logs dentro do container Jibri
JIBRI_LOGS_DIR=/config/logs

# Desabilitar HTTPS: tratar conexões TLS fora desta instalação
#DISABLE_HTTPS=1

# Redirecionar tráfego HTTP para HTTPS
# Necessário para o Let's Encrypt, depende da portão padrão HTTPS (443)
ENABLE_HTTP_REDIRECT=1
